// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: protodb.proto

package protodb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldDbType int32

const (
	// auto match db type if DbTypeStr not set
	// pb type -> db type
	// bool -> bool
	// string -> text
	// int32 -> int
	// int64,uint32 -> bigint
	// float -> float
	// double -> double precision
	// bytes -> bytea
	FieldDbType_AutoMatch FieldDbType = 0
	FieldDbType_BOOL      FieldDbType = 1
	FieldDbType_INT32     FieldDbType = 2
	FieldDbType_INT64     FieldDbType = 3
	FieldDbType_FLOAT     FieldDbType = 4
	FieldDbType_DOUBLE    FieldDbType = 5
	FieldDbType_TEXT      FieldDbType = 6
	FieldDbType_JSONB     FieldDbType = 7
	FieldDbType_UUID      FieldDbType = 8
	FieldDbType_TIMESTAMP FieldDbType = 9
	FieldDbType_DATE      FieldDbType = 10
	FieldDbType_BYTEA     FieldDbType = 11
	// ipv4 or ipv6 address
	FieldDbType_INET   FieldDbType = 12
	FieldDbType_UINT32 FieldDbType = 13
)

// Enum value maps for FieldDbType.
var (
	FieldDbType_name = map[int32]string{
		0:  "AutoMatch",
		1:  "BOOL",
		2:  "INT32",
		3:  "INT64",
		4:  "FLOAT",
		5:  "DOUBLE",
		6:  "TEXT",
		7:  "JSONB",
		8:  "UUID",
		9:  "TIMESTAMP",
		10: "DATE",
		11: "BYTEA",
		12: "INET",
		13: "UINT32",
	}
	FieldDbType_value = map[string]int32{
		"AutoMatch": 0,
		"BOOL":      1,
		"INT32":     2,
		"INT64":     3,
		"FLOAT":     4,
		"DOUBLE":    5,
		"TEXT":      6,
		"JSONB":     7,
		"UUID":      8,
		"TIMESTAMP": 9,
		"DATE":      10,
		"BYTEA":     11,
		"INET":      12,
		"UINT32":    13,
	}
)

func (x FieldDbType) Enum() *FieldDbType {
	p := new(FieldDbType)
	*p = x
	return p
}

func (x FieldDbType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldDbType) Descriptor() protoreflect.EnumDescriptor {
	return file_protodb_proto_enumTypes[0].Descriptor()
}

func (FieldDbType) Type() protoreflect.EnumType {
	return &file_protodb_proto_enumTypes[0]
}

func (x FieldDbType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldDbType.Descriptor instead.
func (FieldDbType) EnumDescriptor() ([]byte, []int) {
	return file_protodb_proto_rawDescGZIP(), []int{0}
}

type PDBFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name style(msg & field)
	// empty='go': default, go name style, better performance in crud operation in
	// go (like: UserName) 'snake': snake name style (like: user_name)
	NameStyle string `protobuf:"bytes,1,opt,name=NameStyle,proto3" json:"NameStyle,omitempty"`
	// comment for file
	Comment []string `protobuf:"bytes,2,rep,name=Comment,proto3" json:"Comment,omitempty"`
}

func (x *PDBFile) Reset() {
	*x = PDBFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDBFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDBFile) ProtoMessage() {}

func (x *PDBFile) ProtoReflect() protoreflect.Message {
	mi := &file_protodb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDBFile.ProtoReflect.Descriptor instead.
func (*PDBFile) Descriptor() ([]byte, []int) {
	return file_protodb_proto_rawDescGZIP(), []int{0}
}

func (x *PDBFile) GetNameStyle() string {
	if x != nil {
		return x.NameStyle
	}
	return ""
}

func (x *PDBFile) GetComment() []string {
	if x != nil {
		return x.Comment
	}
	return nil
}

type PDBMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// comment for table
	Comment []string `protobuf:"bytes,1,rep,name=Comment,proto3" json:"Comment,omitempty"`
	// sql prepends before create table
	SQLPrepend []string `protobuf:"bytes,2,rep,name=SQLPrepend,proto3" json:"SQLPrepend,omitempty"`
	// sql appends before )
	SQLAppend []string `protobuf:"bytes,3,rep,name=SQLAppend,proto3" json:"SQLAppend,omitempty"`
	// sql appends after ) before ;
	SQLAppendsAfter []string `protobuf:"bytes,4,rep,name=SQLAppendsAfter,proto3" json:"SQLAppendsAfter,omitempty"`
	// sql appends after ;
	SQLAppendsEnd []string `protobuf:"bytes,5,rep,name=SQLAppendsEnd,proto3" json:"SQLAppendsEnd,omitempty"`
	// generate proto msg { {msg}}List in  xxx.list.proto
	// 0: auto if msg name start with db then generate { {msg}}List
	// 1: always generate { {msg}}List
	// 4: never generate { {msg}}List
	MsgList int32 `protobuf:"varint,6,opt,name=MsgList,proto3" json:"MsgList,omitempty"`
}

func (x *PDBMsg) Reset() {
	*x = PDBMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDBMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDBMsg) ProtoMessage() {}

func (x *PDBMsg) ProtoReflect() protoreflect.Message {
	mi := &file_protodb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDBMsg.ProtoReflect.Descriptor instead.
func (*PDBMsg) Descriptor() ([]byte, []int) {
	return file_protodb_proto_rawDescGZIP(), []int{1}
}

func (x *PDBMsg) GetComment() []string {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *PDBMsg) GetSQLPrepend() []string {
	if x != nil {
		return x.SQLPrepend
	}
	return nil
}

func (x *PDBMsg) GetSQLAppend() []string {
	if x != nil {
		return x.SQLAppend
	}
	return nil
}

func (x *PDBMsg) GetSQLAppendsAfter() []string {
	if x != nil {
		return x.SQLAppendsAfter
	}
	return nil
}

func (x *PDBMsg) GetSQLAppendsEnd() []string {
	if x != nil {
		return x.SQLAppendsEnd
	}
	return nil
}

func (x *PDBMsg) GetMsgList() int32 {
	if x != nil {
		return x.MsgList
	}
	return 0
}

type PDBField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// do not generate db field in create table
	// when in update, do not update this field
	NotDB bool `protobuf:"varint,1,opt,name=NotDB,proto3" json:"NotDB,omitempty"`
	// is primary key
	Primary bool `protobuf:"varint,2,opt,name=Primary,proto3" json:"Primary,omitempty"`
	// is unique key, if the unique include multiple columns, specify the UniqueName
	Unique bool `protobuf:"varint,3,opt,name=Unique,proto3" json:"Unique,omitempty"`
	// is not null
	NotNull bool `protobuf:"varint,4,opt,name=NotNull,proto3" json:"NotNull,omitempty"`
	// reference to other table, sql like:  REFERENCES other_table(other_field)
	Reference string `protobuf:"bytes,5,opt,name=Reference,proto3" json:"Reference,omitempty"`
	// default value
	DefaultValue string `protobuf:"bytes,6,opt,name=DefaultValue,proto3" json:"DefaultValue,omitempty"`
	// append sql before ,
	SQLAppend []string `protobuf:"bytes,7,rep,name=SQLAppend,proto3" json:"SQLAppend,omitempty"`
	// append sql after ,
	SQLAppendsEnd []string `protobuf:"bytes,8,rep,name=SQLAppendsEnd,proto3" json:"SQLAppendsEnd,omitempty"`
	// db no update
	// when in update, do not update this field, for example, create time
	NoUpdate bool `protobuf:"varint,9,opt,name=NoUpdate,proto3" json:"NoUpdate,omitempty"`
	// serial type 0:not serial type 2:smallint(serial2) 4:integer(serial4) 8:bigint(serial8)
	// strong advice not use serial type,it's hard in distributed system
	SerialType int32 `protobuf:"varint,10,opt,name=SerialType,proto3" json:"SerialType,omitempty"`
	// db type
	DbType FieldDbType `protobuf:"varint,11,opt,name=DbType,proto3,enum=protodb.FieldDbType" json:"DbType,omitempty"`
	// use custom db type when DbType is not good fit
	DbTypeStr string `protobuf:"bytes,12,opt,name=DbTypeStr,proto3" json:"DbTypeStr,omitempty"`
	// zero value treat as null for insert,update, especially for reference field
	ZeroAsNull bool `protobuf:"varint,13,opt,name=ZeroAsNull,proto3" json:"ZeroAsNull,omitempty"`
	// db no insert
	// when in insert, do not insert this field, for example, database has default value
	NoInsert bool `protobuf:"varint,14,opt,name=NoInsert,proto3" json:"NoInsert,omitempty"`
	// comment for field
	Comment []string `protobuf:"bytes,15,rep,name=Comment,proto3" json:"Comment,omitempty"`
	// unique group name
	// when a unique constrain include multiple column, specify the a group name for it
	UniqueName string `protobuf:"bytes,16,opt,name=UniqueName,proto3" json:"UniqueName,omitempty"`
}

func (x *PDBField) Reset() {
	*x = PDBField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDBField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDBField) ProtoMessage() {}

func (x *PDBField) ProtoReflect() protoreflect.Message {
	mi := &file_protodb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDBField.ProtoReflect.Descriptor instead.
func (*PDBField) Descriptor() ([]byte, []int) {
	return file_protodb_proto_rawDescGZIP(), []int{2}
}

func (x *PDBField) GetNotDB() bool {
	if x != nil {
		return x.NotDB
	}
	return false
}

func (x *PDBField) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *PDBField) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *PDBField) GetNotNull() bool {
	if x != nil {
		return x.NotNull
	}
	return false
}

func (x *PDBField) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *PDBField) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *PDBField) GetSQLAppend() []string {
	if x != nil {
		return x.SQLAppend
	}
	return nil
}

func (x *PDBField) GetSQLAppendsEnd() []string {
	if x != nil {
		return x.SQLAppendsEnd
	}
	return nil
}

func (x *PDBField) GetNoUpdate() bool {
	if x != nil {
		return x.NoUpdate
	}
	return false
}

func (x *PDBField) GetSerialType() int32 {
	if x != nil {
		return x.SerialType
	}
	return 0
}

func (x *PDBField) GetDbType() FieldDbType {
	if x != nil {
		return x.DbType
	}
	return FieldDbType_AutoMatch
}

func (x *PDBField) GetDbTypeStr() string {
	if x != nil {
		return x.DbTypeStr
	}
	return ""
}

func (x *PDBField) GetZeroAsNull() bool {
	if x != nil {
		return x.ZeroAsNull
	}
	return false
}

func (x *PDBField) GetNoInsert() bool {
	if x != nil {
		return x.NoInsert
	}
	return false
}

func (x *PDBField) GetComment() []string {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *PDBField) GetUniqueName() string {
	if x != nil {
		return x.UniqueName
	}
	return ""
}

// CRUD DML Result
type DMLResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RowsAffected in dml operation
	RowsAffected int64 `protobuf:"varint,1,opt,name=RowsAffected,proto3" json:"RowsAffected,omitempty"`
	// err info when error happened
	ErrInfo string `protobuf:"bytes,2,opt,name=ErrInfo,proto3" json:"ErrInfo,omitempty"`
}

func (x *DMLResult) Reset() {
	*x = DMLResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protodb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DMLResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DMLResult) ProtoMessage() {}

func (x *DMLResult) ProtoReflect() protoreflect.Message {
	mi := &file_protodb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DMLResult.ProtoReflect.Descriptor instead.
func (*DMLResult) Descriptor() ([]byte, []int) {
	return file_protodb_proto_rawDescGZIP(), []int{3}
}

func (x *DMLResult) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

func (x *DMLResult) GetErrInfo() string {
	if x != nil {
		return x.ErrInfo
	}
	return ""
}

var file_protodb_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*PDBFile)(nil),
		Field:         1888,
		Name:          "protodb.pdbf",
		Tag:           "bytes,1888,opt,name=pdbf",
		Filename:      "protodb.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*PDBMsg)(nil),
		Field:         1888,
		Name:          "protodb.pdbm",
		Tag:           "bytes,1888,opt,name=pdbm",
		Filename:      "protodb.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*PDBField)(nil),
		Field:         1888,
		Name:          "protodb.pdb",
		Tag:           "bytes,1888,opt,name=pdb",
		Filename:      "protodb.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional protodb.PDBFile pdbf = 1888;
	E_Pdbf = &file_protodb_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional protodb.PDBMsg pdbm = 1888;
	E_Pdbm = &file_protodb_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional protodb.PDBField pdb = 1888;
	E_Pdb = &file_protodb_proto_extTypes[2]
)

var File_protodb_proto protoreflect.FileDescriptor

var file_protodb_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x07, 0x50, 0x44,
	0x42, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xca, 0x01,
	0x0a, 0x06, 0x50, 0x44, 0x42, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x51, 0x4c, 0x50, 0x72, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x51, 0x4c, 0x50, 0x72, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x51, 0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x51, 0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x53, 0x51, 0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x51, 0x4c, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x51,
	0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x53, 0x51, 0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf0, 0x03, 0x0a, 0x08, 0x50,
	0x44, 0x42, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x74, 0x44, 0x42,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x4e, 0x6f, 0x74, 0x44, 0x42, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x4e, 0x6f, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x51, 0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x51, 0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x51, 0x4c,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x53, 0x51, 0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x4e, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x44,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x44, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x5a, 0x65, 0x72, 0x6f, 0x41,
	0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x5a, 0x65, 0x72,
	0x6f, 0x41, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4e, 0x6f, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a,
	0x09, 0x44, 0x4d, 0x4c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x6f,
	0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x52, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0xac, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x44, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x6f,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54,
	0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x4a, 0x53, 0x4f, 0x4e,
	0x42, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x10, 0x08, 0x12, 0x0d, 0x0a,
	0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x59, 0x54, 0x45, 0x41, 0x10,
	0x0b, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x45, 0x54, 0x10, 0x0c, 0x12, 0x0a, 0x0a, 0x06, 0x55,
	0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x0d, 0x3a, 0x46, 0x0a, 0x04, 0x70, 0x64, 0x62, 0x66, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe0, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x50,
	0x44, 0x42, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x70, 0x64, 0x62, 0x66, 0x88, 0x01, 0x01, 0x3a,
	0x48, 0x0a, 0x04, 0x70, 0x64, 0x62, 0x6d, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe0, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x50, 0x44, 0x42, 0x4d, 0x73, 0x67,
	0x52, 0x04, 0x70, 0x64, 0x62, 0x6d, 0x88, 0x01, 0x01, 0x3a, 0x46, 0x0a, 0x03, 0x70, 0x64, 0x62,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xe0, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62,
	0x2e, 0x50, 0x44, 0x42, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x03, 0x70, 0x64, 0x62, 0x88, 0x01,
	0x01, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x79, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protodb_proto_rawDescOnce sync.Once
	file_protodb_proto_rawDescData = file_protodb_proto_rawDesc
)

func file_protodb_proto_rawDescGZIP() []byte {
	file_protodb_proto_rawDescOnce.Do(func() {
		file_protodb_proto_rawDescData = protoimpl.X.CompressGZIP(file_protodb_proto_rawDescData)
	})
	return file_protodb_proto_rawDescData
}

var file_protodb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protodb_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protodb_proto_goTypes = []interface{}{
	(FieldDbType)(0),                    // 0: protodb.FieldDbType
	(*PDBFile)(nil),                     // 1: protodb.PDBFile
	(*PDBMsg)(nil),                      // 2: protodb.PDBMsg
	(*PDBField)(nil),                    // 3: protodb.PDBField
	(*DMLResult)(nil),                   // 4: protodb.DMLResult
	(*descriptorpb.FileOptions)(nil),    // 5: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil), // 6: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 7: google.protobuf.FieldOptions
}
var file_protodb_proto_depIdxs = []int32{
	0, // 0: protodb.PDBField.DbType:type_name -> protodb.FieldDbType
	5, // 1: protodb.pdbf:extendee -> google.protobuf.FileOptions
	6, // 2: protodb.pdbm:extendee -> google.protobuf.MessageOptions
	7, // 3: protodb.pdb:extendee -> google.protobuf.FieldOptions
	1, // 4: protodb.pdbf:type_name -> protodb.PDBFile
	2, // 5: protodb.pdbm:type_name -> protodb.PDBMsg
	3, // 6: protodb.pdb:type_name -> protodb.PDBField
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	4, // [4:7] is the sub-list for extension type_name
	1, // [1:4] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protodb_proto_init() }
func file_protodb_proto_init() {
	if File_protodb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protodb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDBFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDBMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDBField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protodb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DMLResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protodb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_protodb_proto_goTypes,
		DependencyIndexes: file_protodb_proto_depIdxs,
		EnumInfos:         file_protodb_proto_enumTypes,
		MessageInfos:      file_protodb_proto_msgTypes,
		ExtensionInfos:    file_protodb_proto_extTypes,
	}.Build()
	File_protodb_proto = out.File
	file_protodb_proto_rawDesc = nil
	file_protodb_proto_goTypes = nil
	file_protodb_proto_depIdxs = nil
}
